// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace Rhyous.DataMigration.AdvisorsAssistant.Models;

public partial class AanvTransType
{
    public int IKeyId { get; set; }

    public string CCode { get; set; }

    public string CDescription { get; set; }

    public string CSourceDisplay { get; set; }

    public int IKeyCorrespondingTrans { get; set; }

    public int INetCalculations { get; set; }

    public int IFlowDirection { get; set; }

    public int IFlowType { get; set; }

    public int ICalcOrder { get; set; }

    public int ISortOrder { get; set; }

    public int ICalculationDate { get; set; }

    public short IShareBalance { get; set; }

    public bool BFlagCashBalanceTrans { get; set; }

    public bool BFlagAllowShares { get; set; }

    public bool BFlagBasisAutoUpdate { get; set; }

    public bool BFlagAllowBasisEdit { get; set; }

    public bool BFlagBasisAdjustmentNoLot { get; set; }

    public bool BFlagCancelTrans { get; set; }

    public bool BFlagReconcileTrans { get; set; }

    public bool BFlagInterestPayment { get; set; }

    public bool BFlagSplit { get; set; }

    public bool BFlagFilterAccount { get; set; }

    public bool BFlagFilterClient { get; set; }

    public bool BFlagFilterSymbol { get; set; }

    public bool BFlagRorCreatePeriod { get; set; }

    public bool BFlagRorEliminatePeriod { get; set; }

    public bool BFlagNoZeroShares { get; set; }

    public bool BFlagNoZeroValue { get; set; }

    public bool BFlagCreateCashFlow { get; set; }

    public short IBasisCalculation { get; set; }

    public short IGainCalculation { get; set; }

    public short IInterestCalculation { get; set; }

    public short INetInvestedCalculation { get; set; }

    public short INetNewMoneyCalculation { get; set; }

    public short ITotalNewMoneyCalculation { get; set; }

    public short IDistPaidOutCalculation { get; set; }

    public short IDistReinvestedCalculation { get; set; }

    public short ICapGainLongPaidOut { get; set; }

    public short ICapGainShortPaidOut { get; set; }

    public short IInterestPaidOut { get; set; }

    public short IDividendPaidOut { get; set; }

    public short ICapGainLongReinvested { get; set; }

    public short ICapGainShortReinvested { get; set; }

    public short IInterestReinvested { get; set; }

    public short IDividendReinvested { get; set; }

    public short IMoneyIn { get; set; }

    public short IMoneyOut { get; set; }

    public short IMoneyFlowNet { get; set; }

    public short IClientMoneyIn { get; set; }

    public short IClientMoneyOut { get; set; }

    public short IClientNet { get; set; }

    public short IOutSideMoneyIn { get; set; }

    public short IOutSideMoneyOut { get; set; }

    public short IOutSideMoneyNet { get; set; }

    public short IAccountMoneyIn { get; set; }

    public short IAccountMoneyOut { get; set; }

    public short IAccountDistributionsPaidOut { get; set; }

    public short IAccountDistributionsInternal { get; set; }

    public short INetTransfers { get; set; }

    public short INetExpenses { get; set; }

    public short INetAdjustments { get; set; }

    public short IRealGain { get; set; }

    public short IManagementFee { get; set; }

    public short IAccountExpense { get; set; }

    public short IAccountFee { get; set; }

    public short IAccruedInterestFlowNet { get; set; }

    public short IContributionNet { get; set; }

    public short INetTransferOfBasis { get; set; }

    public short ITransferOfBasisOut { get; set; }

    public short ITransferOfBasisIn { get; set; }

    public string CWhoChange { get; set; }

    public DateTime? DLastChange { get; set; }

    public string CWhoAdded { get; set; }

    public DateTime? DWhenAdded { get; set; }

    public string CSerialId { get; set; }

    public Guid GUid { get; set; }

    public int IRecVersion { get; set; }

    public virtual ICollection<AanvTran> AanvTrans { get; set; } = new List<AanvTran>();

    public virtual ICollection<AaperspectiveTransCode> AaperspectiveTransCodes { get; set; } = new List<AaperspectiveTransCode>();
}